import { load } from "jsr:@std/dotenv@0.225.5";
import { AtpAgent } from "npm:@atproto/api@0.15.14";

// 1. Load environment variables
const env = await load();

const {
  PDS_URL,
  DID,
  RKEY,
  APP_PASSWORD,
  MARKDOWN_PATH,
  HANDLE,
} = env;

// 2. Read markdown file
const content = await Deno.readTextFile(MARKDOWN_PATH);

// 3. Authenticate using AtpAgent (from @atproto/api)
const agent = new AtpAgent({ service: PDS_URL });

try {
  await agent.login({
    identifier: HANDLE,
    password: APP_PASSWORD,
  });
} catch (error) {
  console.error("Login failed:", error);
  Deno.exit(1);
}

// 4. Fetch the existing record
let record;
try {
  const getRes = await agent.com.atproto.repo.getRecord({
    repo: DID,
    collection: "com.whtwnd.blog.entry",
    rkey: RKEY,
  });
  record = getRes.data.value;
} catch (error) {
  console.error("Failed to fetch record:", error);
  Deno.exit(1);
}

// 5. Update the content field with autogenerated footer
const currentDateTime = new Date().toISOString();
const footer = `\n\n---\n*Last updated: ${currentDateTime}*`;
record.content = content + footer;

// 6. Update the record on the PDS
try {
  await agent.com.atproto.repo.putRecord({
    repo: DID,
    collection: "com.whtwnd.blog.entry",
    rkey: RKEY,
    record,
  });
  console.log("Record updated successfully!");
} catch (error) {
  console.error("Failed to update record:", error);
  Deno.exit(1);
}
